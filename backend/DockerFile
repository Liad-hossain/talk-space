# FROM python:3.11-slim-bookworm as prod

# ENV POETRY_HOME="/opt/poetry" \
#     PATH="/opt/poetry/bin:$PATH" \
#     POETRY_VIRTUALENVS_CREATE=false \
#     PYTHONUNBUFFERED=1

# RUN apt-get update && apt-get install -y\
#     gcc curl\
#     && rm -rf /var/lib/apt/lists/*

# RUN pip install poetry==1.8.5

# COPY ./pyproject.toml ./poetry.lock /app/

# WORKDIR /app

# RUN poetry install

# RUN apt-get purge -y \
#   gcc \
#   && rm -rf /var/lib/apt/lists/*

# COPY ./. /app

# RUN chmod +x /app/entrypoint.sh

# # TODO: Remove the below line when using docker compose or kubernetes

# # ENTRYPOINT [ "/app/entrypoint.sh" ]


# --- Build stage ---
FROM python:3.11-slim-bookworm as builder

ENV POETRY_HOME="/opt/poetry" \
    PATH="/opt/poetry/bin:$PATH" \
    POETRY_VIRTUALENVS_CREATE=false \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y gcc curl

# Install Poetry
RUN pip install poetry==1.8.5

# Copy only files needed to install dependencies
COPY ./pyproject.toml ./poetry.lock /app/

# Install project dependencies
RUN poetry install --no-interaction --no-ansi


# --- Final stage ---
FROM python:3.11-slim-bookworm

ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Copy virtualenv or site-packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy app files (source code, entrypoint, etc.)
COPY . /app

# Ensure entrypoint is executable
RUN chmod +x /app/entrypoint.sh
